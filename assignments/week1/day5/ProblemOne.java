package day5;

/*
    Q1 Find all interleavings of given strings that can be formed from all the characters of the first and second string where the order of characters is preserved.
    
    Input: str1 = "AB",  str2 = "CD"
    Output:
        ABCD
        ACBD
        ACDB
        CABD
        CADB
        CDAB
    Input: str1 = "AB",  str2 = "C"
    Output:
        ABC
        ACB
        CAB
 */

 class ProblemOne{
    // main method
    public static void main(String[] args) {
        String str1 = "AB";
        String str2 = "CD";

        printInterleavingStrings(str1,str2);
    }

    /*
     * MARK :- Print interleaving string patterns
     * INPUT :- Two Strings
     * OUTPUT :- print pattern
     * DESCRIPTION :- This method print all the interleaving string generated by two given string
     */
    public static void printInterleavingStrings(String str1, String str2){
        printPattern(str1,0,str2,0,"");
    }

    /*
     * MARK :- Print interleaving string patterns
     * INPUT :- String str1, int index1, String str2, int index2, String pattern
     * OUTPUT :- print pattern
     * DESCRIPTION :- This method generate and print all the interleaving string pattern using recursion.It uses indices of both string to track the recursion. 
     */
    public static void printPattern(String str1, int i, String str2, int j, String pattern){
        if(i == str1.length() && j == str2.length()){
            System.out.print(pattern+" ");
        }
        if(i < str1.length()){
            // taking letter of first string
            printPattern(str1, i+1, str2, j, pattern + str1.charAt(i));
        }
        if(j < str2.length()){
            // taking letter of second string
            printPattern(str1, i, str2, j+1, pattern + str2.charAt(j));
        }
    }
 }